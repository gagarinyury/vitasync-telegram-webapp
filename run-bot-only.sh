#!/bin/bash

echo "ü§ñ –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ Telegram –±–æ—Ç–∞"
echo "============================"

cd /root/vitasync-telegram-webapp

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
set -a
source .env
set +a

echo ""
echo "üì± –¢–æ–∫–µ–Ω –±–æ—Ç–∞: ${TELEGRAM_BOT_TOKEN:0:20}..."
echo "üåê WebApp URL: $TELEGRAM_WEBAPP_URL"
echo ""

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
cat > test-bot.js << 'EOF'
const { Telegraf } = require('telegraf');

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

console.log('ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');

// Start command
bot.command('start', async (ctx) => {
  console.log('üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç:', ctx.from.username);
  
  const webAppUrl = `${process.env.TELEGRAM_WEBAPP_URL}?tg_user_id=${ctx.from.id}`;
  
  await ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VitaSync! üíä', {
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
            web_app: { url: webAppUrl }
          }
        ]
      ]
    }
  });
});

// Log all messages
bot.on('message', (ctx) => {
  console.log('üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç', ctx.from.username, ':', ctx.message.text);
});

// Error handling
bot.catch((err, ctx) => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', err);
});

// Launch bot
bot.launch()
  .then(() => {
    console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
    console.log('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –≤ Telegram');
  })
  .catch(err => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', err);
  });

// Graceful shutdown
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
cd backend
echo "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
node ../test-bot.js